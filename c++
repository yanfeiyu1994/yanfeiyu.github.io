1.涉及到浮点数的计算，一定要注意舍位误差。也就是说，对于整数，最好显式地加上.0

2.关于getchar。
getchar函数是从缓冲区读取数据的,而不是从你的屏幕上读取数据.键盘负责往缓冲区写入数据,而getchar函数负责读取数据.
getchar函数不会关心你实际输入的是什么,它只负责从缓冲区读取数据,而且每次读取一个字符.
你点击键盘的时候,实际上是往缓冲区输入:
你按下a,则缓冲区中保存了一个字符a
你按下b,则缓冲区中又保存了一个字符b
你按下c,则缓冲区中又保存了一个字符c
你按下1,则缓冲区中又保存了一个字符1
你按下backspace删除键,则缓冲区中删除了一个字符(最后保存的那个1)
除非你按下Enter,不然你其实就是在往缓冲区中塞数据.
关键点来了:当你按下Enter的时候,发生了两个动作.首先是往缓冲区保存了一个'\n'字符,然后才执行刷新.刷新其实就是告诉getchar(或者任何需要读取这个缓冲区的函数，比如scanf),现在你可以开始读取我保存的数据了.

于是现在缓冲区中保存的数据是[a,b,c,'\n'] ,注意缓冲区的最后会有一个换行符(因为你敲了Enter键). 好,现在开始读取数据:

第一次调用getchar,则读取缓冲区中的第一个数据a
第二次调用getchar,将会读取缓冲区中的第二个数据b
第三次调用getchar,将会读取缓冲区中的第三个数据c
第四次调用getchar,将会读取缓冲区中的最后一个数据'\n',也就是换行符.

如果你while循环来调用n次getchar(),就会按顺序读取缓冲区n次,就好像是按顺序读取数组一样.

如果getchar()发现缓冲区中没数据了,也就是说缓冲区的数据已经被读完了,没数据可读了.那么getchar函数会等你再次输入数据并且按下Enter执行刷新.

如果缓冲区有8个字符,你却只调用了5次getchar,那么缓冲区会剩下3个字符.因为你只读了5个字符.
